
sources: 
https://www.digitalocean.com/community/tutorials/understanding-nginx-server-and-location-block-selection-algorithms-fr
https://docs.nginx.com/nginx/admin-guide/web-server/web-server/
https://www.solo.io/topics/nginx/nginx-configuration/
https://nginx.org/en/docs/

######################
| Nginx.conf server  |
######################
- No variables
- One entry per line, terminated by a semi colon ';', no multiline at all
	VERB WS DATA WS;
VERB: WORD
WORD: alnum chars
DATA: WORD *(WS WORD)
- no specific order (except repetition?)
- Accept comments ? '#'

Locations data seems to always override server's ones.
Plus the subject mostly ask routes (=locations?) to have some precisions (autoindex, accepted methods etc)
--> maybe we can only accept those precisions insie locations, but not in server? 
--> NO! Locations are specific ones and server general ones (ie locations data missing)

Server:
	- host and port --> "listen 10.33.3.5:8080" 
		all optional ? (nginx oui, sujet non?), ip opt and port opt too (set some default)
		if several entries, only the first used discard laters ?? nginx tests needed
		if multiple server same host:port -> first server takes all
	- server_name --> "server_name blabla bliablia blobloblob etc"
		all optional, name part mandatory
	- default error_pages --> "error_page html/site1/error.html"
		all optional, specify what page for what error code ?
	- body size limit --> "max_body_size 10000000"
		all optional, int part mandatory, what overflow?

Location: (also accepted in server? nginx tests needed)
	- accpeted methods --> "allow_methods GET,POST,DELETE"
		all optional, str part mandatory
	- http redirection --> "redirection /monsite.html"
		all optional, str part mandatory
	- directory to serach --> "root html/site1/"
		all optional, str part mandatory, no check in here (cgi error?)
	- directory listing --> "autoindex on" (or off)
		all optional, str part mandatory
	- def for directory rq --> "index index.html"
		all optional, str part mandatory
	- cgi extension --> "cgi_ext .php,.py,.sh"
		all optional, str part mandatory
	- cgi exec --> "cgi /usr/bin/php-cgi,/usr/bin/python3,/usr/bin/bash"


##############
| TEST NGINX |
##############

@@@@@@@@@@@@@@@
| root + path |
@@@@@@@@@@@@@@@
Can be present in server and in location. location override server !
Can't yet really understand what happens if no root -> 404
if present : give the path to look for when any request comes to the port
if the root is given in the request path : 404 because it seems to try to concatenate it ?
	ie root /var + request url /var ==> /var/var


@@@@@@@@@@@@@@@@@@@@
| autoindex on/off |
@@@@@@@@@@@@@@@@@@@@
for request ending with '/'
Can be present in server and in location. location override server !
if request a dir with a off and no index.html -> 403 Forbidden
if request a dir with a off and index.html present -> 200 + return index.html
if no autoindex line : same behaviour than OFF
if request a dir with a on and no index.html -> 200 + indexation stuff
if request a dir with a on and index.html present -> 200 + return index.html
when requesting the ip:port with no '/' --> give index.html if exists, if not 403 forbidden




##########
| Server |
##########

Multiple servers : on va utiliser les accolades pour delimiter
Pas de niveau superieur (http etc)
On utilise aussi accolades pour a minima location : il faudra compter (ie les
guillemets dans minishell) pour retrouver la bonne accolade fermante de server
Ou RECURSION !!!!

Par défaut, tout bloc de serveur qui n’inclut pas une directive listen se voit 
attribuer les paramètres d’écoute de 0.0.0.0:80 (ou 0.0.0.0:8080)
La directive listen peut être configurée sur :
	- Un combo adresse IP/port.
	- Une adresse IP unique qui écoutera ensuite le port 80 par défaut.
	- Un port unique qui écoutera chaque interface sur ce port.
	- Le chemin vers une socket Unix.


############
| Location |
############
On va utilsier les accolades aussi pour delimiter. 
On ne gere pas le REGEX !
On va gerer les deux suivants :
	location /site { } -> sert /site, /site/index.html ect
	location = /site { } -> ne sert que /site
ordre : 
	- cherche d'abord une localisation exacte (avec le '=')
	- ensuite cherche les prefixes inexactes avec les plus long en premier : 
		uri: /site/repo/sousrepo/file.html
		location /site (non selectionne)
		location /site/repo (non selectionne)
		location /site/repo/sousrepo (selectionne!!)

a voir :
	index
	try_files
	rewrite
	error_page

