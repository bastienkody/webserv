
sources: 
https://www.digitalocean.com/community/tutorials/understanding-nginx-server-and-location-block-selection-algorithms-fr
https://docs.nginx.com/nginx/admin-guide/web-server/web-server/
https://www.solo.io/topics/nginx/nginx-configuration/

######################
| Nginx.conf server  |
######################
- No variables
- One entry per line, terminated by a semi colon ';'
	VERB WS 
- no specific order (except repetition?)
- Only the server part (and locations whitin)
- Locations : no nested locations

Server:
	- host and port --> "listen 10.33.3.5:8080" 
		all optional ? (nginx oui, sujet non?), ip opt and port opt too (set some default)
		if several entries, only the first used discard laters ?? nginx tests needed
		if multiple server same host:port -> first server takes all
	- server_name --> "server_name blabla"
		all optional, name part mandatory
	- default error_pages --> "error_page html/site1/error.html"
		all optional, specify what page for what error code ?
	- body size limit --> "max_body_size 10000000"
		all optional, int part mandatory, what overflow?

Location: (also accepted in server? nginx tests needed)
	- accpeted methods --> "allow_methods GET,POST,DELETE"
		all optional, str part mandatory
	- http redirection --> "redirection /monsite.html"
		all optional, str part mandatory
	- directory to serach --> "root html/site1/"
		all optional, str part mandatory, no check in here (cgi error?)
	- directory listing --> "autoindex on" (or off)
		all optional, str part mandatory
	- def for directory rq --> "index index.html"
		all optional, str part mandatory
	- cgi extension --> "cgi_ext .php,.py,.sh"
		all optional, str part mandatory
	- cgi exec --> "cgi /usr/bin/php-cgi,/usr/bin/python3,/usr/bin/bash"




example:
server {
	listen 127.0.0.1:8080;

}


##########
| Server |
##########

Multiple servers : on va utiliser les accolades pour delimiter
Pas de niveau superieur (http etc)
On utilise aussi accolades pour a minima location : il faudra compter (ie les
guillemets dans minishell) pour retrouver la bonne accolade fermante de server
Ou RECURSION !!!!

Par défaut, tout bloc de serveur qui n’inclut pas une directive listen se voit 
attribuer les paramètres d’écoute de 0.0.0.0:80 (ou 0.0.0.0:8080)
La directive listen peut être configurée sur :
	- Un combo adresse IP/port.
	- Une adresse IP unique qui écoutera ensuite le port 80 par défaut.
	- Un port unique qui écoutera chaque interface sur ce port.
	- Le chemin vers une socket Unix.


############
| Location |
############
On va utilsier les accolades aussi pour delimiter. 
On ne gere pas le REGEX !
On va gerer les deux suivants :
	location /site { } -> sert /site, /site/index.html ect
	location = /site { } -> ne sert que /site
ordre : 
	- cherche d'abord une localisation exacte (avec le '=')
	- ensuite cherche les prefixes inexactes avec les plus long en premier : 
		uri: /site/repo/sousrepo/file.html
		location /site (non selectionne)
		location /site/repo (non selectionne)
		location /site/repo/sousrepo (selectionne!!)

a voir :
	index
	try_files
	rewrite
	error_page

